type: class
description: A simple calculator tool that performs basic arithmetic operations and
  calculates factorials.
methods:
  add:
    type: function
    description: 'staticmethod(function) -> method Convert a function to be a static
      method. A static method does not receive an implicit first argument. To declare
      a static method, use this idiom: class C: @staticmethod def f(arg1, arg2, ...):
      ... It can be called either on the class (e.g. C.f()) or on an instance (e.g.
      C().f()). Both the class and the instance are ignored, and neither is passed
      implicitly as the first argument to the method. Static methods in Python are
      similar to those found in Java or C++. For a more advanced concept, see the
      classmethod builtin.'
    signature: (a, b)
    parameters: ''
  divide:
    type: function
    description: 'staticmethod(function) -> method Convert a function to be a static
      method. A static method does not receive an implicit first argument. To declare
      a static method, use this idiom: class C: @staticmethod def f(arg1, arg2, ...):
      ... It can be called either on the class (e.g. C.f()) or on an instance (e.g.
      C().f()). Both the class and the instance are ignored, and neither is passed
      implicitly as the first argument to the method. Static methods in Python are
      similar to those found in Java or C++. For a more advanced concept, see the
      classmethod builtin.'
    signature: (a, b)
    parameters: ''
  factorial:
    type: function
    description: 'staticmethod(function) -> method Convert a function to be a static
      method. A static method does not receive an implicit first argument. To declare
      a static method, use this idiom: class C: @staticmethod def f(arg1, arg2, ...):
      ... It can be called either on the class (e.g. C.f()) or on an instance (e.g.
      C().f()). Both the class and the instance are ignored, and neither is passed
      implicitly as the first argument to the method. Static methods in Python are
      similar to those found in Java or C++. For a more advanced concept, see the
      classmethod builtin.'
    signature: (n)
    parameters: ''
  multiply:
    type: function
    description: 'staticmethod(function) -> method Convert a function to be a static
      method. A static method does not receive an implicit first argument. To declare
      a static method, use this idiom: class C: @staticmethod def f(arg1, arg2, ...):
      ... It can be called either on the class (e.g. C.f()) or on an instance (e.g.
      C().f()). Both the class and the instance are ignored, and neither is passed
      implicitly as the first argument to the method. Static methods in Python are
      similar to those found in Java or C++. For a more advanced concept, see the
      classmethod builtin.'
    signature: (a, b)
    parameters: ''
  subtract:
    type: function
    description: 'staticmethod(function) -> method Convert a function to be a static
      method. A static method does not receive an implicit first argument. To declare
      a static method, use this idiom: class C: @staticmethod def f(arg1, arg2, ...):
      ... It can be called either on the class (e.g. C.f()) or on an instance (e.g.
      C().f()). Both the class and the instance are ignored, and neither is passed
      implicitly as the first argument to the method. Static methods in Python are
      similar to those found in Java or C++. For a more advanced concept, see the
      classmethod builtin.'
    signature: (a, b)
    parameters: ''
